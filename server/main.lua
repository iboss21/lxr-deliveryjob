local function riskByDistance(a,b) local d=#(a-b); if d<1200.0 then return 'low' elseif d<2600.0 then return 'medium' elseif d<4200.0 then return 'high' else return 'extreme' end end
CreateThread(function() if Config.AutoRoutes.enabled then local map=Cities; local fr=Config.AutoRoutes.from; local to=Config.AutoRoutes.to; for _,s in ipairs(fr) do for __,t in ipairs(to) do if s~=t and map[s] and map[t] then local risk=riskByDistance(map[s].pos,map[t].pos); local stealth=(math.random()<Config.AutoRoutes.stealthChance); local wagon=(Config.AutoRoutes.useWagonByRisk[risk] or 'standard'); local board=nil; for _,b in ipairs(Config.Boards) do if #(b.coords - map[s].pos) < 2.0 then board=b break end end if not board then board={name=s..' Freight',ped={model='S_M_M_BankClerk_01',heading=90.0},coords=map[s].pos,cartSpawn=vector4(map[s].pos.x,map[s].pos.y,map[s].pos.z,0.0),deliveries={}} table.insert(Config.Boards,board) end table.insert(board.deliveries,{id=(s:lower()..'_to_'..t:lower()),label=(s..' â†’ '..t),desc=('Freight run from '..s..' to '..t),risk=risk,wagon=wagon,to=map[t].pos,stealth=stealth}) end end end end end)
